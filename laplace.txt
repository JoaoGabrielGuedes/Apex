//I will coment this a lot
//Necessary data
String hi = 'Hello World!';
String explainying = 'I\'m studying Salesforce Apex Salesforce!\n So I decided to create this code for apply my knowledge in the framework.\n This will be probaly long and useless for anyone other than me :D';
String bTw = 'I will be refactoring from time to time, so dont worry :D';
String alphabetSix = 'abcdef';
String alphabetNextSix = 'ghijk';
String sameAlphabet = 'abcdef';
String alphabetIntersection = 'defghi';
String sameAlphabetWithCase = 'aBcdEf';
String sameAlphabetWithSpace = 'a b c d e f';
String sameAlphabetWithRepeat = 'abcdefabcdef';

System.debug(hi);
System.debug(explainying);
System.debug(bTw);

//primitive data types
Boolean isThisAdream = false;
System.debug(isThisAdream);

Integer universeAndLifeNumber = 42;
System.debug(universeAndLifeNumber);

Long guessWhat = 0110111001101111L;
System.debug(guessWhat);

Double pi = 6.28318530717958647692/2;
System.debug(pi);

Date bestDay = Date.newInstance(1996, 2, 11);
System.debug(bestDay);

Time currentTime = Time.newInstance(21, 47, 0, 0);
System.debug(currentTime);

DateTime currentDateTime = DateTime.newInstance(2023, 4, 20, 21, 47, 0);
System.debug(currentDateTime);

//a list with something I know
List<String> knowledge = new List<String>{'System.debug', 'Seven', 'Potato', 'Class'};
  knowledge.add('List'); 
  knowledge.add('Map');
  knowledge.add('Add');
  knowledge.add('Remove');
  knowledge.remove(2);
  knowledge.set(1, 'Set');
System.debug(knowledge);

//This is null?

String iAm;
System.debug(iAm);

Boolean sleepy;
System.debug(sleepy);

Integer but;
System.debug(but);

Long my;
System.debug(my);

Double study;
System.debug(study);

Date willNot;
System.debug(willNot);

Time stop;
System.debug(stop);

String whatIs = 'Why do I find this funny? Hahahaha';
String capitalizeIsSelfish = 'i will creat this just for capitalize';
System.debug('Actual String: ' +whatIs);

//abbreviate and Abbreviate plus offset
System.debug('This is a abbreviated String: ' +whatIs.abbreviate(20));
System.debug('This is a abbreviated² String: ' +whatIs.abbreviate(10));
System.debug('This is a abbreviated³ String: ' +whatIs.abbreviate(5));
System.debug('I dont know what this is anymore: ' +whatIs.abbreviate(4)); //nevermind, there is a min of 4 letters                        
System.debug(whatIs.abbreviate(10,5)); //offset

//uncapitalize
System.debug('Actual String: ' +whatIs);
System.debug('Uncapitalized String: ' +whatIs.uncapitalize());
System.debug('If I call it again will be uncapitalizade? I guess that will not but here it is: ' +whatIs);

//capitalize
System.debug('Actual String: ' +capitalizeIsSelfish);
System.debug('Capitalize: ' +capitalizeIsSelfish.capitalize());

//center
String whatsThat = 'This';
System.debug(whatsThat.center(30));

//padded
System.debug(whatsThat.center(10, '-'));

//charAt
System.debug(hi.charAt(6)); //return value of the character ASCII

//codePointAt - I need to study this further
System.debug(hi.codePointAt(6));

//codePointBefore - This too
System.debug(hi.codePointBefore(6));

//codePointBefore - ....
System.debug(hi.codePointCount(6,10));

//compareTo
Integer result = 
    alphabetSix.compareTo(alphabetNextSix);
System.assertEquals(result, -6);

Integer resultTwo = 
    alphabetSix.compareTo(sameAlphabet);
System.assertEquals(resultTwo, 0);

Integer resultThree = 
    alphabetSix.compareTo(alphabetIntersection);
System.assertEquals(resultThree, -3);

//contains
Boolean resultBool =
    alphabetSix.contains(sameAlphabet);
System.assertEquals(resultBool, true);

//containsAny
Boolean resultBoolTwo =
    alphabetSix.containsAny(alphabetIntersection);
System.assertEquals(resultBoolTwo, true);

Boolean resultBoolThree =
    alphabetSix.containsAny(alphabetNextSix);
System.assertEquals(resultBoolThree, false);

//containsIgnoreCase
Boolean resultBoolFour =
    alphabetSix.containsIgnoreCase(sameAlphabetWithCase);
System.assertEquals(resultBoolFour, true);

//containsNone
Boolean resultBoolFive =
    alphabetSix.containsNone(alphabetNextSix);
System.assertEquals(resultBoolFive, true);

//containsOnly
Boolean resultBoolSix =
    alphabetSix.containsOnly('abc');
System.assertEquals(resultBoolSix, false);

Boolean resultBoolSeven =
    alphabetSix.containsOnly('abcfgh');
System.assertEquals(resultBoolSeven, false);

Boolean resultBoolEight =
    alphabetSix.containsOnly('abcdef');
System.assertEquals(resultBoolEight, true);

//containsWhiteSpace
System.assert(sameAlphabetWithSpace.containsWhitespace());

//countMatches
System.assertEquals(1, alphabetSix.countMatches('abcdef'));
System.assertEquals(2, sameAlphabetWithRepeat.countMatches('abcdef'));

//deleteWhitespace
System.assertEquals(alphabetSix, sameAlphabetWithSpace.deleteWhitespace());

//difference
String alphabetDifference = 
   alphabetSix.difference('abcxyz');
System.assertEquals(
   'xyz',
   alphabetDifference);